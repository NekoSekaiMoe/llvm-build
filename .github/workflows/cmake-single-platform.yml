# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-24.04-arm

    steps:
    - uses: actions/checkout@v4
      with:
        repository: dpkg123/llvm-google
        ref: llvm-r547379-release
        path: /home/user/llvm-google

    - uses: actions/checkout@v4
      with:
        path: /home/user/llvm-google/ccc
    - name: dep
      run: sudo apt update && sudo apt install ccache cmake gcc g++ build-essential libelf-dev libssl-dev -y && mv -v /home/user/llvm-google/ccc/out /home/user/llvm-google/llvm/

    - name: Build
      # Build your program with the given configuration
      run: cd /home/user/llvm-google/llvm/out && cmake --build ${{github.workspace}}/llvm/out

